---
- name: Check filesystem type for data disks
  ansible.builtin.command: "lsblk -f {{ item }} -n -o FSTYPE"
  with_items: "{{ data_disks }}"
  register: data_disks_fs_check_results

- name: Identify non-BTRFS data disks
  set_fact:
    non_btrfs_disks: "{{ non_btrfs_disks | default([]) + [item.item] }}"
  with_items: "{{ data_disks_fs_check_results.results }}"
  when:
    - "'btrfs' not in item.stdout"

- name: Check filesystem type for cache and parity disks
  ansible.builtin.command: "lsblk -f {{ item }} -n -o FSTYPE"
  with_items: "{{ cache_disks + parity_disks }}"
  register: cache_parity_disks_fs_check_results

- name: Identify non-EXT4 cache and parity disks
  set_fact:
    non_ext4_disks: "{{ non_ext4_disks | default([]) + [item.item] }}"
  with_items: "{{ cache_parity_disks_fs_check_results.results }}"
  when:
    - "'ext4' not in item.stdout"

- name: Set disks_to_wipe
  set_fact:
    disks_to_wipe: "{{ (non_btrfs_disks | default([])) + (non_ext4_disks | default([])) }}"

- name: Notify about disks to be formatted
  debug:
    msg: |
      The following disks need to be wiped and formatted:
      Data disks (BTRFS): {{ non_btrfs_disks | default([]) | join(', ') }}
      Cache/Parity disks (EXT4): {{ non_ext4_disks | default([]) | join(', ') }}

      However, wipe_and_setup is set to false. Please set wipe_and_setup to true to proceed with wiping and formatting the disks.
  when:
    - disks_to_wipe | length > 0
    - not wipe_and_setup

- name: Fail if disks need to be wiped but wipe_and_setup is false
  fail:
    msg: "Disks need to be wiped and formatted, but wipe_and_setup is set to false. Please set wipe_and_setup to true to proceed."
  when:
    - disks_to_wipe | length > 0
    - not wipe_and_setup

- name: Prompt user for confirmation to wipe and reformat disks
  pause:
    prompt: |
      The following actions will be performed:
      - Wipe disk labels for: {{ disks_to_wipe | join(', ') }}
      - Create BTRFS filesystem on: {{ non_btrfs_disks | default([]) | join(', ') }}
      - Create EXT4 filesystem on: {{ non_ext4_disks | default([]) | join(', ') }}

      WARNING: This will result in data loss on the affected disks.

      Do you want to proceed? [y/N]:
  register: user_confirmation
  when:
    - disks_to_wipe | length > 0
    - wipe_and_setup

- name: Fail if user does not confirm disk wiping
  fail:
    msg: "User did not confirm disk wiping. Playbook execution stopped."
  when:
    - disks_to_wipe | length > 0
    - wipe_and_setup
    - user_confirmation.user_input | default('n') | lower != 'y'

- name: Wipe disk labels
  command: sudo wipefs -a {{ item }}
  with_items: "{{ disks_to_wipe }}"
  when:
    - disks_to_wipe | length > 0
    - wipe_and_setup
    - user_confirmation.user_input | default('n') | lower == 'y'

- name: Create BTRFS filesystem on data disks
  ansible.builtin.filesystem:
    fstype: btrfs
    dev: "{{ item }}"
  with_items: "{{ non_btrfs_disks | default([]) }}"
  when:
    - disks_to_wipe | length > 0
    - wipe_and_setup
    - user_confirmation.user_input | default('n') | lower == 'y'

- name: Create EXT4 filesystem on cache and parity disks
  ansible.builtin.filesystem:
    fstype: ext4
    dev: "{{ item }}"
  with_items: "{{ non_ext4_disks | default([]) }}"
  when:
    - disks_to_wipe | length > 0
    - wipe_and_setup
    - user_confirmation.user_input | default('n') | lower == 'y'

- name: Get filesystem type for all disks
  ansible.builtin.shell: "lsblk -f {{ item }}"
  loop: "{{ data_disks + cache_disks + parity_disks }}"
  register: filesystem_types
  changed_when: false

- name: Print filesystem types
  debug:
    var: filesystem_types.results